package com.ahmed.library.web.dal.entity;
// Generated Jun 25, 2020 11:00:16 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="library"
    , uniqueConstraints = @UniqueConstraint(columnNames="username") 
)
public class User  implements java.io.Serializable {


     private int id;
     private String username;
     private String password;
     private boolean userType;
     private Set<BookPublisher> bookPublishers = new HashSet<BookPublisher>(0);
     private Set<Order> orders = new HashSet<Order>(0);

    public User() {
    }

	
    public User(int id, String username, String password, boolean userType) {
        this.id = id;
        this.username = username;
        this.password = password;
        this.userType = userType;
    }
    public User(int id, String username, String password, boolean userType, Set<BookPublisher> bookPublishers, Set<Order> orders) {
       this.id = id;
       this.username = username;
       this.password = password;
       this.userType = userType;
       this.bookPublishers = bookPublishers;
       this.orders = orders;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="username", unique=true, nullable=false)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="password", nullable=false)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="user_type", nullable=false)
    public boolean isUserType() {
        return this.userType;
    }
    
    public void setUserType(boolean userType) {
        this.userType = userType;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<BookPublisher> getBookPublishers() {
        return this.bookPublishers;
    }
    
    public void setBookPublishers(Set<BookPublisher> bookPublishers) {
        this.bookPublishers = bookPublishers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Order> getOrders() {
        return this.orders;
    }
    
    public void setOrders(Set<Order> orders) {
        this.orders = orders;
    }




}


