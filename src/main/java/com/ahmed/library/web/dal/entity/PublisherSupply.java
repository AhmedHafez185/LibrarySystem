package com.ahmed.library.web.dal.entity;
// Generated Jun 25, 2020 11:00:16 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * PublisherSupply generated by hbm2java
 */
@Entity
@Table(name="publisher_supply"
    ,catalog="library"
    , uniqueConstraints = @UniqueConstraint(columnNames="name") 
)
public class PublisherSupply  implements java.io.Serializable {


     private int id;
     private String name;
     private String country;
     private Set<BookPublisher> bookPublishers = new HashSet<BookPublisher>(0);

    public PublisherSupply() {
    }

	
    public PublisherSupply(int id, String name) {
        this.id = id;
        this.name = name;
    }
    public PublisherSupply(int id, String name, String country, Set<BookPublisher> bookPublishers) {
       this.id = id;
       this.name = name;
       this.country = country;
       this.bookPublishers = bookPublishers;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="name", unique=true, nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="country", length=150)
    public String getCountry() {
        return this.country;
    }
    
    public void setCountry(String country) {
        this.country = country;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="publisherSupply")
    public Set<BookPublisher> getBookPublishers() {
        return this.bookPublishers;
    }
    
    public void setBookPublishers(Set<BookPublisher> bookPublishers) {
        this.bookPublishers = bookPublishers;
    }




}


